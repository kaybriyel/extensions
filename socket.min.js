async function initSocket(){var{uuid:t,socketUrl:e}=await STORAGE_LOCAL.get();const n=t+"-BG";async function i({action:t,from:e,payload:a}){console.log(t,e,a);let o="NOT MATCH";try{switch(t){case"HI":o=(console.log("init socket with id ",n),await void WS.send(JSON.stringify({action:"ID",payload:n})));break;case CMD.TAB:case CMD.TABS:o=await chrome.tabs.query(a);break;case CMD.GOTO:o=await function(t){if(t.options?.length)return t.options.forEach(t=>{chrome.tabs.create(t)}),"CREATED"}(a);break;case CMD.SET_STORAGE:o=await function(t){var{type:t="",values:e}=t;{if(t===CMD.LOCAL)return storageLocal.set({...e});if(t===CMD.SYNC)return storageSync.set({...e})}}(a);break;case CMD.GET_STORAGE:o=await function(t){var{type:t=""}=t;{if(t===CMD.LOCAL)return storageLocal.get();if(t===CMD.SYNC)return storageSync.get()}}(a);break;case CMD.HELP:return WS.emit(i.toString)}}catch(t){o=t.message}"NOT MATCH"!==o&&(t+="_RES",WS.emit({action:t,clientId:e,payload:o}))}WS&&1===WS.readyState&&WS.id===n||(WS&&1===WS.readyState&&(WS.onclose=null,WS.close()),(WS=new WebSocket(e)).emit=({clientId:t,payload:e})=>WS.send(JSON.stringify({action:"SEND",payload:{clientId:t,payload:e}})),WS.onopen=()=>{WS.onmessage=({data:t})=>{try{i(JSON.parse(t))}catch(t){}}},WS.onclose=()=>setTimeout(()=>initSocket(n),2e3))}
