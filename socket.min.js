async function initSocket(){var{uuid:t,socketUrl:e}=await storageLocal.get();const o=t+"-BG";async function n({action:t,from:e,payload:a}){console.log(t,e,a);let s="NOT MATCH";try{switch(t){case"HI":s=(console.log("init socket with id ",o),await void ws.send(JSON.stringify({action:"ID",payload:o})));break;case CMD.TAB:case CMD.TABS:s=await chrome.tabs.query(a);break;case CMD.GOTO:s=await function(t){if(t.options?.length)return t.options.forEach(t=>{chrome.tabs.create(t)}),"CREATED"}(a);break;case CMD.SET_STORAGE:s=await function(t){var{type:t="",values:e}=t;{if(t===CMD.LOCAL)return storageLocal.set({...e});if(t===CMD.SYNC)return storageSync.set({...e})}}(a);break;case CMD.GET_STORAGE:s=await function(t){var{type:t=""}=t;{if(t===CMD.LOCAL)return storageLocal.get();if(t===CMD.SYNC)return storageSync.get()}}(a);break;case CMD.HELP:return ws.emit(n.toString)}}catch(t){s=t.message}"NOT MATCH"!==s&&(t+="_RES",ws.emit({action:t,clientId:e,payload:s}))}ws&&1===ws.readyState&&ws.id===o||(ws&&1===ws.readyState&&(ws.onclose=null,ws.close()),(ws=new WebSocket(e)).emit=({clientId:t,payload:e})=>ws.send(JSON.stringify({action:"SEND",payload:{clientId:t,payload:e}})),ws.onopen=()=>{ws.onmessage=({data:t})=>{try{n(JSON.parse(t))}catch(t){}}},ws.onclose=()=>setTimeout(()=>initSocket(o),2e3))}chrome.tabs.onUpdated.addListener(async function(t,e,a){"complete"===e.status&&initSocket()});
